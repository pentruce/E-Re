package Java_0426;

//Emart영수증 출력
//KOPO15_박소현

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.util.Calendar;

public class Emart {

	public static int k15_netprice(int k15_price, double k15_rate) {

		return (int) (k15_price / (1 + k15_rate) + 0.5); // 반올림

	}

	public static String subStringByte(String str, int cutlen) { //한글 자르기

		StringBuffer k15_sbstr = new StringBuffer(cutlen);

		int nCnt = 0;

		for (char ch : str.toCharArray()) {
			nCnt += String.valueOf(ch).getBytes().length;
			if (nCnt > cutlen)
				break;
			k15_sbstr.append(ch);
		}

		if (nCnt > k15_sbstr.length()) {
			nCnt = k15_sbstr.toString().getBytes().length;
			for (int i = 0; i < (cutlen - nCnt); i++) {
				k15_sbstr.append(" ");
			}
		}
		return k15_sbstr.toString();
	}

	public static void main(String[] args) {

		LocalDateTime now = LocalDateTime.now();
		LocalDateTime targetDateTime = now.minusMinutes(60); // 시간 조작 (입차시간이 구매시간보다 빨라야 되므로)

		DecimalFormat K15_df = new DecimalFormat("###,###,###,###,###"); // 콤마표시하기

		Calendar K15_calt = Calendar.getInstance();

		SimpleDateFormat K15_sdt = new SimpleDateFormat("YYYY-MM-dd HH:mm"); // 년도/월/일/시/분 - 구매시간

		SimpleDateFormat k15_sd = new SimpleDateFormat("YYYYMMdd"); // 년도/월/일

		double k15_taxRate = 0.1; // 세금10%

		// 아이템명 기입
		String[] k15_itemname = { "참외 1봉(4~7입) ", "콩나물 1봉(120g) ", "토마토 1팩(900g) ", "오렌지 1봉(1Kg) ", "백산수(6입) "

				, "레몬 1봉(4~6입) ", "건망고 (120*5입) ", "골드키위 ", "보드마카 ", "코코넛 2개 "

				, "신라면 5입 ", "제천사과 1kg ", "캔디포도 1.99Kg ", "죽장사과 1400g", "필리핀 망고2Kg"

				, "태국건망고 180g", "포도맛 젤리 550g", "무등산 수박 10kg", "세척사과 4입", "스크류바 10입"

				, "제주한라봉 500g", "자연산멍게 1kg", "텐텐영양제 ", "크림슨포도 1kg", "나주배 1박스"

				, "유동 골뱅이 400g", "쌀 누룽지 1500g   ", "CJ 비비고칩 600g  ", "그릭요거트", "바나나칩 1000g    ", "SanDisk USB 10TB ",
				"신동진 햅쌀 10Kg", "철원 오대쌀 50kg", "복사용지 1000매", "필립스 전구", "커피캡슐 16입", "쿠크다스 20입", "더위사냥 3개", "아침햇살 24캔" };

		// 가격 기입
		int[] k15_price = { 6000, 12500, 23300, 52500, 1250, 7500, 6900, 5980, 83000, 95000

				, 3300, 6610, 27550, 11800, 3980, 42480, 7920, 49800, 4980, 7130

				, 32890, 4480, 4980, 33210, 6950, 5960, 6990, 1980, 3980, 44800, 145000, 45820, 12000, 15000, 45650,
				45840, 11110, 22220, 13100 };

		// 수량 기입
		int[] k15_num = { 12, 40, 17, 118, 10, 23, 21, 91, 13, 27

				, 21, 17, 76, 81, 10, 6, 61, 10, 20, 10

				, 91, 21, 17, 56, 21, 32, 51, 19, 12, 21, 31, 43, 11, 11, 12, 13, 14, 15, 16 };

		// 면세 판별 - true:면세O , false:면세 X
		boolean[] k15_taxfree = { true, true, false, false, true

				, false, false, false, false, false

				, false, true, false, true, true

				, false, false, false, false, false

				, false, true, false, false, false

				, false, false, false, false, false, false, true, true, false, false, false, false, false, false };

		String k15_taxStar = null; // null값으로 설정

		int k15_sumNum = 0; // 값 0으로 초기화

		int k15_sumTaxFree = 0; // 값 0으로 초기화

		int k15_sumTax = 0; // 값 0으로 초기화

		int k15_sumPrice = 0; // 값 0으로 초기화

		for (int i = 0; i < k15_itemname.length; i++) {

			if (k15_taxfree[i]) {

				k15_sumTaxFree += k15_price[i] * k15_num[i];

			} else {

				k15_sumTax += k15_price[i] * k15_num[i];

			}

			k15_sumPrice += k15_price[i] * k15_num[i];

		}

		int k15_netprice = k15_netprice(k15_sumTax, k15_taxRate);

		int k15_tax = k15_sumTax - k15_netprice;

		for (int i = 0; i < k15_num.length; i++) {

			k15_sumNum += k15_num[i];

		}

		System.out.printf("           %s\n", "이마트 죽전점 (031)888-1234");

		System.out.printf("   emart   %s\n", "206-86-50913 강희석");

		System.out.printf("           %s\n", "용인 수지구 포은대로 552");

		System.out.println();

		System.out.println("영수증 미지참시 교환/환불 불가");

		System.out.println("정상상품에 한함, 30일 이내(신선 7일)");

		System.out.println("※일부 브랜드매장 제외(매장 고지물참조)");

		System.out.println("교환/환불 구매점에서 가능(결제카드 지참)");

		System.out.println();

		System.out.printf("[구 매]%s%s\n", K15_sdt.format(K15_calt.getTime()), "POS:0011-9861");

		System.out.println("-------------------------------------------");

		System.out.printf("%s %10.2s %5.0s %8s\n", "  상 품 명", "단 가", "수량", "금 액");

		for (int i = 0; i < k15_itemname.length; i++) {

			if (i % 5 == 0) {

				System.out.println("-------------------------------------------");

			}

			if (k15_taxfree[i]) {

				k15_taxStar = "*";

			} else {

				k15_taxStar = " ";

			}

			System.out.printf("%s %-13s %-6s %3s %11s\n", k15_taxStar, k15_itemname[i], K15_df.format(k15_price[i]),
					k15_num[i], K15_df.format(k15_price[i] * k15_num[i]));
		}

		System.out.println();

		System.out.printf("\n%20s %10d\n", "총 품목 수량 ", k15_sumNum); // 2칸

		System.out.printf(" %20s %10s\n", "(*)면 세  물 품 ", K15_df.format(k15_sumTaxFree)); // 1칸

		System.out.printf(" %20s %10s\n", "과 세  물 품 ", K15_df.format(k15_netprice)); // 1칸

		System.out.printf("  %20s %10s\n", "부   가   세 ", K15_df.format(k15_tax)); // 1칸

		System.out.printf("   %20s %10s\n", "합        계 ", K15_df.format(k15_sumPrice)); // 1칸

		System.out.printf("%s %18s\n", "\n결 제 대 상 금 액", K15_df.format(k15_sumPrice)); // 1칸

		System.out.println("-------------------------------------------");

		System.out.printf("%s  %26s\n", "KO15 KOPO 폴리", "541707**0484/35860658");

		System.out.printf("%s  %15s%s\n", "카드결제(IC)", "일시불 / ", K15_df.format(k15_sumPrice));

		System.out.println("-------------------------------------------");

		System.out.printf("            [%s]\n\n", "신세계포인트 적립");

		System.out.printf("%s\n", "박** 고객님의 포인트 현황입니다.");

		System.out.printf("%s %15s %5s\n", "금회발생포인트", "9350**9995", K15_df.format(k15_sumPrice / 1000));

		System.out.printf("%s %12s(%5s)\n", "누계(가용)포인트", K15_df.format(56037), K15_df.format(54073));

		System.out.printf("%s\n", "*신세계포인트 유효기간은 5년입니다.");

		System.out.println("\n-------------------------------------------");

		System.out.printf("    %s\n", "구매금액기준 무료주차시간 자동부여\n");

		System.out.printf("%s %20s\n", "차량번호 : ", "80마****"); // 영수증 시간보다 빨라야함.

		System.out.printf("%s %20s\n", "입차시간 : ", targetDateTime); // 입차시간 (구매시간보다 1시간 빠름)

		System.out.println("-------------------------------------------");

		System.out.printf("%s %20s\n", "캐셔:kopo15 PSH", "1515");

		System.out.printf("\n   %s\n", " ||||||||||||||||||||||||||||||");

		System.out.printf("   %s\n", " ||||||||||||||||||||||||||||||");

		System.out.printf("%13s%s\n", k15_sd.format(K15_calt.getTime()), "/00119861/00164980/31");
	}
}
